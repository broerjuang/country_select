// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Icon = require("country_select/src/components/Icon.bs.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var CoreUI = require("country_select/src/components/CoreUI.bs.js");
var FlagIcon = require("country_select/src/components/FlagIcon.bs.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var ReactDOMRe = require("reason-react/src/ReactDOMRe.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var ReactSelect = require("country_select/src/bindings/ReactSelect.bs.js");
var ReactWindow = require("country_select/src/bindings/ReactWindow.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

function customStyle(isOpen) {
  return Css.style(/* :: */[
              Css.display(/* flex */-1010954439),
              /* :: */[
                Css.textAlign(/* center */98248149),
                /* :: */[
                  Css.borderColor(/* `rgba */[
                        -878128972,
                        /* tuple */[
                          0,
                          0,
                          0,
                          0.2
                        ]
                      ]),
                  /* :: */[
                    Css.justifyContent(/* spaceBetween */516682146),
                    /* :: */[
                      Css.paddingRight(/* `px */[
                            25096,
                            5
                          ]),
                      /* :: */[
                        Css.paddingLeft(/* `px */[
                              25096,
                              10
                            ]),
                        /* :: */[
                          Css.alignItems(/* center */98248149),
                          /* :: */[
                            Css.maxWidth(/* `px */[
                                  25096,
                                  150
                                ]),
                            /* :: */[
                              Css.borderRadius(/* `px */[
                                    25096,
                                    2
                                  ]),
                              /* :: */[
                                Css.borderWidth(/* `pxFloat */[
                                      -1040484748,
                                      0.5
                                    ]),
                                /* :: */[
                                  Css.backgroundColor(isOpen ? /* `hex */[
                                          5194459,
                                          "E0EBFD"
                                        ] : Css.white),
                                  /* [] */0
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

var textStyle = Css.style(/* :: */[
      Css.color(Css.black),
      /* :: */[
        Css.textOverflow(/* ellipsis */166888785),
        /* [] */0
      ]
    ]);

var Styles = /* module */[
  /* customStyle */customStyle,
  /* textStyle */textStyle
];

var component = ReasonReact.statelessComponent("Trigger");

function make(isOpen, onKeyDown, selectedValue, onPress, _children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              var tmp = {
                className: customStyle(isOpen),
                tabIndex: 0
              };
              if (onKeyDown !== undefined) {
                tmp.onKeyDown = Caml_option.valFromOption(onKeyDown);
              }
              if (onPress !== undefined) {
                tmp.onClick = Caml_option.valFromOption(onPress);
              }
              return React.createElement("button", tmp, ReasonReact.element(undefined, undefined, CoreUI.Text[/* make */2](textStyle, selectedValue, /* array */[])), ReasonReact.element(undefined, undefined, Icon.ChevronDown[/* make */1](/* array */[])));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var Trigger = /* module */[
  /* Styles */Styles,
  /* component */component,
  /* make */make
];

var $$default = Css.style(/* :: */[
      Css.bottom(Css.zero),
      /* :: */[
        Css.left(Css.zero),
        /* :: */[
          Css.right(Css.zero),
          /* :: */[
            Css.top(Css.zero),
            /* :: */[
              Css.position(/* fixed */10615156),
              /* :: */[
                Css.zIndex(1),
                /* [] */0
              ]
            ]
          ]
        ]
      ]
    ]);

var Styles$1 = /* module */[/* default */$$default];

var component$1 = ReasonReact.statelessComponent("Cover");

function make$1(onClose, _children) {
  return /* record */[
          /* debugName */component$1[/* debugName */0],
          /* reactClassInternal */component$1[/* reactClassInternal */1],
          /* handedOffState */component$1[/* handedOffState */2],
          /* willReceiveProps */component$1[/* willReceiveProps */3],
          /* didMount */component$1[/* didMount */4],
          /* didUpdate */component$1[/* didUpdate */5],
          /* willUnmount */component$1[/* willUnmount */6],
          /* willUpdate */component$1[/* willUpdate */7],
          /* shouldUpdate */component$1[/* shouldUpdate */8],
          /* render */(function (_self) {
              return ReasonReact.element(undefined, undefined, CoreUI.View[/* make */2]($$default, undefined, onClose, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[]));
            }),
          /* initialState */component$1[/* initialState */10],
          /* retainedProps */component$1[/* retainedProps */11],
          /* reducer */component$1[/* reducer */12],
          /* jsElementWrapped */component$1[/* jsElementWrapped */13]
        ];
}

var Cover = /* module */[
  /* Styles */Styles$1,
  /* component */component$1,
  /* make */make$1
];

var $$default$1 = Css.style(/* :: */[
      Css.position(/* absolute */-1013592457),
      /* :: */[
        Css.display(/* block */888960333),
        /* :: */[
          Css.zIndex(2),
          /* :: */[
            Css.marginTop(/* `px */[
                  25096,
                  5
                ]),
            /* :: */[
              Css.minWidth(/* `px */[
                    25096,
                    250
                  ]),
              /* :: */[
                Css.backgroundColor(Css.white),
                /* :: */[
                  Css.border(/* `px */[
                        25096,
                        1
                      ], /* solid */12956715, /* `rgba */[
                        -878128972,
                        /* tuple */[
                          0,
                          0,
                          0,
                          0.08
                        ]
                      ]),
                  /* [] */0
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var Styles$2 = /* module */[/* default */$$default$1];

var component$2 = ReasonReact.statelessComponent("Card");

function make$2(children) {
  return /* record */[
          /* debugName */component$2[/* debugName */0],
          /* reactClassInternal */component$2[/* reactClassInternal */1],
          /* handedOffState */component$2[/* handedOffState */2],
          /* willReceiveProps */component$2[/* willReceiveProps */3],
          /* didMount */component$2[/* didMount */4],
          /* didUpdate */component$2[/* didUpdate */5],
          /* willUnmount */component$2[/* willUnmount */6],
          /* willUpdate */component$2[/* willUpdate */7],
          /* shouldUpdate */component$2[/* shouldUpdate */8],
          /* render */(function (_self) {
              return ReasonReact.element(undefined, undefined, CoreUI.View[/* make */2]($$default$1, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, children));
            }),
          /* initialState */component$2[/* initialState */10],
          /* retainedProps */component$2[/* retainedProps */11],
          /* reducer */component$2[/* reducer */12],
          /* jsElementWrapped */component$2[/* jsElementWrapped */13]
        ];
}

var Card = /* module */[
  /* Styles */Styles$2,
  /* component */component$2,
  /* make */make$2
];

var component$3 = ReasonReact.statelessComponent("Menu");

function make$3(props, _children) {
  return /* record */[
          /* debugName */component$3[/* debugName */0],
          /* reactClassInternal */component$3[/* reactClassInternal */1],
          /* handedOffState */component$3[/* handedOffState */2],
          /* willReceiveProps */component$3[/* willReceiveProps */3],
          /* didMount */component$3[/* didMount */4],
          /* didUpdate */component$3[/* didUpdate */5],
          /* willUnmount */component$3[/* willUnmount */6],
          /* willUpdate */component$3[/* willUpdate */7],
          /* shouldUpdate */component$3[/* shouldUpdate */8],
          /* render */(function (_self) {
              return ReasonReact.element(undefined, undefined, Curry._2(ReactSelect.Components[/* MenuList */2][/* make */0], props, /* array */[ReasonReact.element(undefined, undefined, ReactWindow.make(props.maxHeight, props.children.length, 35, -35, (function (values) {
                                          return React.createElement("div", {
                                                      style: values.style
                                                    }, Caml_array.caml_array_get(props.children, values.index));
                                        })))]));
            }),
          /* initialState */component$3[/* initialState */10],
          /* retainedProps */component$3[/* retainedProps */11],
          /* reducer */component$3[/* reducer */12],
          /* jsElementWrapped */component$3[/* jsElementWrapped */13]
        ];
}

var Menu = /* module */[
  /* component */component$3,
  /* make */make$3
];

var reactSelectStyle = {
  control: (function (styles) {
      var overideStyle = {
        display: "flex",
        fontFamily: "Arial",
        boxShadow: "none",
        flexDirection: "row-reverse"
      };
      return ReactDOMRe.Style[/* combine */0](styles, overideStyle);
    }),
  menu: (function (styles) {
      var overideStyle = {
        marginTop: "0px",
        borderTopLeftRadius: "0px",
        borderTopRightRadius: "0px"
      };
      return ReactDOMRe.Style[/* combine */0](styles, overideStyle);
    })
};

var Styles$3 = /* module */[/* reactSelectStyle */reactSelectStyle];

var component$4 = ReasonReact.statelessComponent("Dropdown");

function make$4(className, selectedValue, onChange, options, _children) {
  return /* record */[
          /* debugName */component$4[/* debugName */0],
          /* reactClassInternal */component$4[/* reactClassInternal */1],
          /* handedOffState */component$4[/* handedOffState */2],
          /* willReceiveProps */component$4[/* willReceiveProps */3],
          /* didMount */component$4[/* didMount */4],
          /* didUpdate */component$4[/* didUpdate */5],
          /* willUnmount */component$4[/* willUnmount */6],
          /* willUpdate */component$4[/* willUpdate */7],
          /* shouldUpdate */component$4[/* shouldUpdate */8],
          /* render */(function (_self) {
              var renderOptions = function (props) {
                return ReasonReact.element(undefined, undefined, Curry._2(ReactSelect.Components[/* Option */0][/* make */0], props, /* array */[ReasonReact.element(undefined, undefined, CoreUI.Row[/* make */2](undefined, undefined, Css.style(/* :: */[
                                              Css.height(/* `px */[
                                                    25096,
                                                    30
                                                  ]),
                                              /* :: */[
                                                Css.alignItems(/* center */98248149),
                                                /* [] */0
                                              ]
                                            ]), undefined, undefined, undefined, undefined, /* array */[
                                          ReasonReact.element(undefined, undefined, FlagIcon.make(FlagIcon.codeFromJs(props.value), /* array */[])),
                                          ReasonReact.element(undefined, undefined, CoreUI.Text[/* make */2](Css.style(/* :: */[
                                                        Css.marginLeft(/* `px */[
                                                              25096,
                                                              10
                                                            ]),
                                                        /* [] */0
                                                      ]), props.label, /* array */[]))
                                        ]))]));
              };
              var renderSearchIcon = function (props) {
                return ReasonReact.element(undefined, undefined, Curry._2(ReactSelect.Components[/* DropdownIndicator */1][/* make */0], props, /* array */[ReasonReact.element(undefined, undefined, Icon.Search[/* make */1](/* array */[]))]));
              };
              return ReasonReact.element(undefined, undefined, make$2(/* array */[ReasonReact.element(undefined, undefined, ReactSelect.Select[/* make */0](true, className, true, false, false, false, true, {
                                        Option: renderOptions,
                                        DropdownIndicator: renderSearchIcon,
                                        IndicatorSeparator: (function (param) {
                                            return null;
                                          }),
                                        MenuList: (function (props) {
                                            return ReasonReact.element(undefined, undefined, make$3(props, /* array */[]));
                                          })
                                      }, onChange, options, "Search", undefined, Caml_option.some(selectedValue), undefined, false, undefined, Caml_option.some(reactSelectStyle), /* array */[]))]));
            }),
          /* initialState */component$4[/* initialState */10],
          /* retainedProps */component$4[/* retainedProps */11],
          /* reducer */component$4[/* reducer */12],
          /* jsElementWrapped */component$4[/* jsElementWrapped */13]
        ];
}

var Dropdown = /* module */[
  /* Styles */Styles$3,
  /* component */component$4,
  /* make */make$4
];

var component$5 = ReasonReact.statelessComponent("ViewIf");

function make$5(test, children) {
  return /* record */[
          /* debugName */component$5[/* debugName */0],
          /* reactClassInternal */component$5[/* reactClassInternal */1],
          /* handedOffState */component$5[/* handedOffState */2],
          /* willReceiveProps */component$5[/* willReceiveProps */3],
          /* didMount */component$5[/* didMount */4],
          /* didUpdate */component$5[/* didUpdate */5],
          /* willUnmount */component$5[/* willUnmount */6],
          /* willUpdate */component$5[/* willUpdate */7],
          /* shouldUpdate */component$5[/* shouldUpdate */8],
          /* render */(function (_self) {
              if (test) {
                return ReasonReact.element(undefined, undefined, CoreUI.View[/* make */2](undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, children));
              } else {
                return null;
              }
            }),
          /* initialState */component$5[/* initialState */10],
          /* retainedProps */component$5[/* retainedProps */11],
          /* reducer */component$5[/* reducer */12],
          /* jsElementWrapped */component$5[/* jsElementWrapped */13]
        ];
}

var ViewIf = /* module */[
  /* component */component$5,
  /* make */make$5
];

exports.Trigger = Trigger;
exports.Cover = Cover;
exports.Card = Card;
exports.Menu = Menu;
exports.Dropdown = Dropdown;
exports.ViewIf = ViewIf;
/* textStyle Not a pure module */
